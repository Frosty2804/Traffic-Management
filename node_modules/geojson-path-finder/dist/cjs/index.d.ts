import { Feature, FeatureCollection, LineString, Point } from "@turf/helpers";
import { Key, Path, PathFinderGraph, PathFinderOptions } from "./types";
export default class PathFinder<TEdgeReduce, TProperties> {
    graph: PathFinderGraph<TEdgeReduce>;
    options: PathFinderOptions<TEdgeReduce, TProperties>;
    constructor(network: FeatureCollection<LineString, TProperties>, options?: PathFinderOptions<TEdgeReduce, TProperties>);
    findPath(a: Feature<Point>, b: Feature<Point>): Path<TEdgeReduce> | undefined;
    _createPhantom(n: Key): string | undefined;
    _removePhantom(n: Key | undefined): void;
}
export declare function pathToGeoJSON<TEdgeReduce>(path: Path<TEdgeReduce> | undefined): Feature<LineString, {
    weight: number;
    edgeDatas: (TEdgeReduce | undefined)[] | undefined;
}> | undefined;
